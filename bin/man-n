#!/bin/sh

#
# Constants.
#

readonly original="$(which man)"
readonly input="$(mktemp -t "manXXXXX")"
readonly prefix="$(dirname "$0")/$(dirname "$(readlink "$0")")/../node_modules"
readonly mdast="$prefix/.bin/mdast"
readonly mdastMan="$prefix/mdast-man"
readonly badges="$prefix/mdast-strip-badges"

#
# Usage.
#

usage () {
cat << EOF
  Usage: man-n [options] <package>

  Options:

    -h, --help  output usage information
    -l, --link  link \`man-n\` to \`man n\`

  Examples:

    $ man-n browserify  # show the browserify documentation
    $ man-n --link      # link \`man-n\` to \`man n\`
    $ man n browserify  # show the browserify documentation
EOF
}

#
# If `--linked`, detect if this is a `n` page.
#

if [ "$1" = "--linked" ]; then shift;
  if [ "$1" = "n" ]; then shift;
  else
    "$original" "$@" && exit || echo 'Searching npm..'
  fi
fi

#
# CLI flags
#

case $1 in
  "")         usage; exit 1 ;;
  -h|--help)  usage; exit ;;
  --link)     echo 'alias "man=man-n --linked"'; exit ;;
  *)          readonly name=$1 ;;
esac

#
# Options.
#

readonly description="$(npm view "$name" description)"
readonly version="$(npm view "$name" version)"
readonly section="n"
readonly manual="npm"

readonly options="\
  name:\"$name\", \
  version:\"$version\", \
  section:\"$section\", \
  description:\"$description\", \
  manual:\"$manual\" \
"

#
# Create man-page.
#

npm view "$name" readme \
  | $mdast --no-ignore --no-rc --silent \
    --use "$badges" \
    --use "$mdastMan=$options" \
  > "$input"

#
# Show man page.
#

man "$input"
